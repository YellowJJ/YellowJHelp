<?xml version="1.0"?>
<doc>
    <assembly>
        <name>YellowJHelpFw</name>
    </assembly>
    <members>
        <member name="M:YellowJHelpFw.Base.BaseHelp.GetAssembly">
            <summary>
            获取自动注入程序集名称
            </summary>
            <returns></returns>
        </member>
        <member name="T:YellowJHelpFw.Entry.AutoInjectAttribute">
            <summary>
            依赖注入基类
            </summary>
        </member>
        <member name="M:YellowJHelpFw.Entry.AutoInjectAttribute.#ctor(System.Type,YellowJHelpFw.Entry.InjectType)">
            <summary>
            绑定对应接口，自动注入程序集
            </summary>
            <param name="interfaceType"></param>
            <param name="injectType"></param>
        </member>
        <member name="P:YellowJHelpFw.Entry.AutoInjectAttribute.InjectType">
            <summary>
            注入类型
            </summary>
        </member>
        <member name="T:YellowJHelpFw.Entry.InjectType">
            <summary>
            注入类型（可控生命周期）
            </summary>
        </member>
        <member name="F:YellowJHelpFw.Entry.InjectType.Scope">
            <summary>
            作用域
            </summary>
        </member>
        <member name="F:YellowJHelpFw.Entry.InjectType.Single">
            <summary>
            单例
            </summary>
        </member>
        <member name="F:YellowJHelpFw.Entry.InjectType.Transient">
            <summary>
            暂时/瞬时
            </summary>
        </member>
        <member name="T:YellowJHelpFw.Entry.KeyValueInfo`2">
            <summary>
            键值类
            </summary>
        </member>
        <member name="P:YellowJHelpFw.Entry.KeyValueInfo`2.Key">
            <summary>
            键
            </summary>
        </member>
        <member name="P:YellowJHelpFw.Entry.KeyValueInfo`2.Value">
            <summary>
            值
            </summary>
        </member>
        <member name="T:YellowJHelpFw.Entry.LogInfo">
            <summary>
            日志
            </summary>
        </member>
        <member name="P:YellowJHelpFw.Entry.LogInfo.Number">
            <summary>
            编码(日志记录自动生成记录编码-不用传值)
            </summary>
        </member>
        <member name="P:YellowJHelpFw.Entry.LogInfo.Date">
            <summary>
            创建时间（日志记录自动生成当前日期-不用传值）
            </summary>
        </member>
        <member name="P:YellowJHelpFw.Entry.LogInfo.State">
            <summary>
            状态级
            </summary>
        </member>
        <member name="P:YellowJHelpFw.Entry.LogInfo.ElapsedTime">
            <summary>
            耗时
            </summary>
        </member>
        <member name="P:YellowJHelpFw.Entry.LogInfo.Source">
            <summary>
            来源
            </summary>
        </member>
        <member name="P:YellowJHelpFw.Entry.LogInfo.SourceCode">
            <summary>
            来源编码
            </summary>
        </member>
        <member name="P:YellowJHelpFw.Entry.LogInfo.SourceName">
            <summary>
            来源名称
            </summary>
        </member>
        <member name="P:YellowJHelpFw.Entry.LogInfo.Acceptor">
            <summary>
            接收值
            </summary>
        </member>
        <member name="P:YellowJHelpFw.Entry.LogInfo.Returbed">
            <summary>
            返回值
            </summary>
        </member>
        <member name="T:YellowJHelpFw.IServer.IYJHelp">
            <summary>
            通用帮助方法
            </summary>
        </member>
        <member name="M:YellowJHelpFw.IServer.IYJHelp.message">
            <summary>
            消息注明
            </summary>
            <returns></returns>
        </member>
        <member name="M:YellowJHelpFw.IServer.IYJHelp.MD5Encrypt(System.String,System.Boolean)">
            <summary>
            32位MD5加密
            </summary>
            <param name="strText">要加密字符串</param>
            <param name="IsLower">是否以小写方式返回</param>
        </member>
        <member name="M:YellowJHelpFw.IServer.IYJHelp.Encode(System.String,System.String,System.String)">
            <summary>
            DES加密
            </summary>
            <param name="data">需要加密的值</param>
            <param name="KEY_64">密钥长度8位</param>
            <param name="IV_64">密钥长度8位</param>
            <returns></returns>
        </member>
        <member name="M:YellowJHelpFw.IServer.IYJHelp.Decode(System.String,System.String,System.String)">
            <summary>
            DES解密
            </summary>
            <param name="data">需要加密的值</param>
            <param name="KEY_64">密钥长度8位</param>
            <param name="IV_64">密钥长度8位</param>
            <returns></returns>
        </member>
        <member name="M:YellowJHelpFw.IServer.IYJHelp.YellowJLog(System.String,System.String)">
            <summary>
            文件流日志记录
            </summary>
            <param name="text">参数</param>
            <param name="address">新建文件名（地址）</param>
        </member>
        <member name="M:YellowJHelpFw.IServer.IYJHelp.IsString(System.String,System.String)">
            <summary>
            string中是否包含某个值
            </summary>
            <param name="data">数据包</param>
            <param name="value">值</param>
            <returns></returns>
        </member>
        <member name="T:YellowJHelpFw.IServer.ICache">
            <summary>
            缓存类
            </summary>
        </member>
        <member name="M:YellowJHelpFw.IServer.ICache.Add(System.String,System.Object)">
            <summary>
            添加缓存
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
        </member>
        <member name="M:YellowJHelpFw.IServer.ICache.Get``1(System.String)">
            <summary>
            获取缓存
            </summary>
            <typeparam name="T">接收实体</typeparam>
            <param name="key">键</param>
            <returns></returns>
        </member>
        <member name="M:YellowJHelpFw.IServer.ICache.Exsits(System.String)">
            <summary>
            判断缓存是否存在
            </summary>
            <param name="key">键</param>
            <returns></returns>
        </member>
        <member name="M:YellowJHelpFw.IServer.ICache.Clear(System.String)">
            <summary>
            删除对应缓存
            </summary>
            <param name="key">键</param>
        </member>
        <member name="M:YellowJHelpFw.IServer.ICache.Clear">
            <summary>
            删除所有缓存
            </summary>
        </member>
        <member name="T:YellowJHelpFw.IServer.IYJHelpKafka">
            <summary>
            Kafka链接通用方法
            </summary>
        </member>
        <member name="M:YellowJHelpFw.IServer.IYJHelpKafka.Produce(System.String,System.String,System.String)">
            <summary>
            发布者
            </summary>
            <param name="theme">主题</param>
            <param name="json">数据</param>
            <param name="BS">kafka连接地址</param>
        </member>
        <member name="M:YellowJHelpFw.IServer.IYJHelpKafka.Produce(System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            发布者-随机分区
            </summary>
            <param name="theme">主题</param>
            <param name="json">数据</param>
            <param name="BS">kafka连接地址</param>
            <param name="start">分区起始值：0</param>
            <param name="end">分区结束值：0</param>
        </member>
        <member name="M:YellowJHelpFw.IServer.IYJHelpKafka.ProduceAdmin(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            发布者（带账号密码）
            </summary>
            <param name="theme">主题</param>
            <param name="json">数据</param>
            <param name="BS">kafka连接地址</param>
            <param name="name">账号</param>
            <param name="pwd">密码</param>
            <param name="skey"></param>
        </member>
        <member name="M:YellowJHelpFw.IServer.IYJHelpKafka.ProduceAdminPartition(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.String)">
            <summary>
            发布者-随机分区（带账号密码）
            </summary>
            <param name="theme">主题</param>
            <param name="json">数据</param>
            <param name="BS">kafka连接地址</param>
            <param name="name">账号</param>
            <param name="pwd">密码</param>
            <param name="skey"></param>
            <param name="start">分区起始值：0</param>
            <param name="end">分区结束值：0</param>
        </member>
        <member name="T:YellowJHelpFw.IServer.IYJHelpRedis">
            <summary>
            redis通用使用
            </summary>
        </member>
        <member name="M:YellowJHelpFw.IServer.IYJHelpRedis.RedisCli(System.String)">
            <summary>
            redis 配置中心
            </summary>
            <returns></returns>
        </member>
        <member name="M:YellowJHelpFw.IServer.IYJHelpRedis.Get``1(System.String)">
            <summary>
            获取单个实体
            </summary>
            <typeparam name="T">实体</typeparam>
            <param name="key">健</param>
            <returns></returns>
        </member>
        <member name="M:YellowJHelpFw.IServer.IYJHelpRedis.GetList``1(System.String)">
            <summary>
            获取列表List
            </summary>
            <typeparam name="T">实体</typeparam>
            <param name="key">健</param>
            <returns></returns>
        </member>
        <member name="M:YellowJHelpFw.IServer.IYJHelpRedis.Set``1(System.String,``0,System.Int32)">
            <summary>
            写入单项实体
            </summary>
            <typeparam name="T">实体</typeparam>
            <param name="key">健</param>
            <param name="enety">值</param>
            <param name="expire">过期时间，秒。小于0时采用默认缓存时间NewLife.Caching.Cache.Expire</param>
        </member>
        <member name="M:YellowJHelpFw.IServer.IYJHelpRedis.Add``1(System.String,``0,System.Int32)">
            <summary>
            添加，已存在时不更新
            </summary>
            <typeparam name="T">实体</typeparam>
            <param name="key">健</param>
            <param name="enety">值</param>
            <param name="expire">过期时间，秒。小于0时采用默认缓存时间NewLife.Caching.Cache.Expire</param>
        </member>
        <member name="M:YellowJHelpFw.IServer.IYJHelpRedis.ListSetW``1(System.String,System.Collections.Generic.List{``0})">
            <summary>
            写入集合：尾部增加
            </summary>
            <typeparam name="T">实体</typeparam>
            <param name="key">健</param>
            <param name="enety">值</param>
        </member>
        <member name="M:YellowJHelpFw.IServer.IYJHelpRedis.ListSetT``1(System.String,System.Collections.Generic.List{``0})">
            <summary>
            写入集合：头部增加
            </summary>
            <typeparam name="T">实体</typeparam>
            <param name="key">健</param>
            <param name="enety">值</param>
        </member>
        <member name="M:YellowJHelpFw.IServer.IYJHelpRedis.Clear">
            <summary>
            清空所有缓存项
            </summary>
        </member>
        <member name="M:YellowJHelpFw.IServer.IYJHelpRedis.Remove(System.String[])">
            <summary>
            清空所有缓存项
            </summary>
        </member>
        <member name="M:YellowJHelpFw.IServer.IYJHelpRedis.GetExpire(System.String)">
            <summary>
            获取缓存项有效期
            </summary>
        </member>
        <member name="M:YellowJHelpFw.IServer.IYJHelpRedis.ContainsKey(System.String)">
            <summary>
            是否存在
            </summary>
        </member>
        <member name="M:YellowJHelpFw.IServer.IYJHelpRedis.Count">
            <summary>
            缓存个数
            </summary>
        </member>
        <member name="M:YellowJHelpFw.IServer.IYJHelpRedis.SCARD(System.String)">
            <summary>
            返回集合个数
            </summary>
        </member>
        <member name="T:YellowJHelpFw.IServer.IYJHelpSql">
            <summary>
            数据库通用方法（测试）
            </summary>
        </member>
        <member name="M:YellowJHelpFw.IServer.IYJHelpSql.Db">
            <summary>
            数据库操作
            </summary>
            <returns></returns>
        </member>
        <member name="M:YellowJHelpFw.IServer.IYJHelpSql.SqlApiLog(YellowJHelpFw.Entry.LogInfo)">
            <summary>
            数据库日志记录
            </summary>
        </member>
        <member name="M:YellowJHelpFw.IServer.IYJHelpSql.SYDb(System.String)">
            <summary>
            私有数据库
            </summary>
            <returns></returns>
        </member>
        <member name="T:YellowJHelpFw.IServer.IYJHelpT`1">
            <summary>
            通用方法(范型)
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:YellowJHelpFw.IServer.IYJHelpT`1.SpliteSourceBySize(System.Collections.Generic.List{`0},System.Int32)">
            <summary>
            将集合按大小分
            </summary>
            <param name="source">数据集</param>
            <param name="pageSiez">每一组大小</param>
        </member>
        <member name="M:YellowJHelpFw.IServer.IYJHelpT`1.SpliteSourceByCount(System.Collections.Generic.List{`0},System.Int32)">
            <summary> 
            将集合安按组数分
            </summary> 
            <param name="source">数据集</param> 
            <param name="count">组数</param> 
        </member>
        <member name="M:YellowJHelpFw.IServer.IYJHelpT`1.DistinctList(System.Collections.Generic.List{`0})">
            <summary>
            集合去重(哈西,只针对数值类型)
            </summary>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:YellowJHelpFw.IServer.IYJHelpT`1.Merge(System.Collections.Generic.List{`0},System.Collections.Generic.List{`0})">
            <summary>
            合并两个集合的函数-不允许有重复项
            </summary>
            <param name="list1">第一个集合</param>
            <param name="list2">第二个集合</param>
            <returns>返回第union的合并结果</returns>
        </member>
        <member name="M:YellowJHelpFw.IServer.IYJHelpT`1.MergeC(System.Collections.Generic.List{`0},System.Collections.Generic.List{`0})">
            <summary>
            合并两个集合的函数-允许出现重复项
            </summary>
            <param name="list1">第一个集合</param>
            <param name="list2">第二个集合</param>
            <returns>返回第union的合并结果</returns>
        </member>
        <member name="M:YellowJHelpFw.IServer.IYJHelpT`1.DiffsetT(System.Collections.Generic.List{`0},System.Collections.Generic.List{`0})">
            <summary>
            获取差集（集合）
            </summary>
            <param name="left">左边的数据</param>
            <param name="right">右边的数据</param>
            <returns></returns>
        </member>
        <member name="T:YellowJHelpFw.IServer.IYJHelpWebApi">
            <summary>
            接口调用方法
            </summary>
        </member>
        <member name="M:YellowJHelpFw.IServer.IYJHelpWebApi.HttpGet(System.String)">
            <summary>
            调用接口方法get
            </summary>
            <param name="url">地址</param>
            <returns></returns>
        </member>
        <member name="M:YellowJHelpFw.IServer.IYJHelpWebApi.HttPost(System.String,System.String)">
            <summary>
            调用接口方法Post
            </summary>
            <param name="url">地址</param>
            <param name="Jsoncontent">参数</param>
            <returns></returns>
        </member>
        <member name="M:YellowJHelpFw.IServer.IYJHelpWebApi.HttHeadersPost(System.String,System.String,System.Net.WebHeaderCollection)">
            <summary>
            调用接口方法Post（新增head头）
            </summary>
            <param name="url">地址</param>
            <param name="Jsoncontent">参数</param>
            <param name="webHeaderCollection">head</param>
            <returns></returns>
        </member>
        <member name="M:YellowJHelpFw.YJHelp.message">
            <summary>
            消息注明
            </summary>
        </member>
        <member name="M:YellowJHelpFw.YJHelp.MD5Encrypt(System.String,System.Boolean)">
            <summary>
            32位MD5加密
            </summary>
            <param name="strText">要加密字符串</param>
            <param name="IsLower">是否以小写方式返回</param>
            <returns></returns>
        </member>
        <member name="M:YellowJHelpFw.YJHelp.Encode(System.String,System.String,System.String)">
            <summary>
            DES加密
            </summary>
            <param name="data">需要加密的值</param>
            <param name="KEY_64">密钥长度8位</param>
            <param name="IV_64">密钥长度8位</param>
            <returns></returns>
        </member>
        <member name="M:YellowJHelpFw.YJHelp.Decode(System.String,System.String,System.String)">
            <summary>
            DES解密
            </summary>
            <param name="data">需要加密的值</param>
            <param name="KEY_64">密钥长度8位</param>
            <param name="IV_64">密钥长度8位</param>
            <returns></returns>
        </member>
        <member name="M:YellowJHelpFw.YJHelp.Cache.Add(System.String,System.Object)">
            <summary>
            添加缓存
            </summary>
        </member>
        <member name="M:YellowJHelpFw.YJHelp.Cache.Get``1(System.String)">
            <summary>
            获取缓存
            </summary>
        </member>
        <member name="M:YellowJHelpFw.YJHelp.Cache.Exsits(System.String)">
            <summary>
            判断缓存是否存在
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:YellowJHelpFw.YJHelp.Cache.Clear(System.String)">
            <summary>
            删除缓存
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:YellowJHelpFw.YJHelp.Cache.Clear">
            <summary>
            删除所有
            </summary>
            <returns></returns>
        </member>
        <member name="M:YellowJHelpFw.YJHelp.YellowJLog(System.String,System.String)">
            <summary>
            日志
            </summary>
            <param name="text">消息</param>
            <param name="address">相对文件名</param>
        </member>
        <member name="M:YellowJHelpFw.YJHelp.MidStrEx(System.String,System.String,System.String)">
            <summary>
            字段截取
            </summary>
            <param name="sourse">值</param>
            <param name="startstr">前字符</param>
            <param name="endstr">后字符</param>
            <returns></returns>
        </member>
        <member name="M:YellowJHelpFw.YJHelp.IsString(System.String,System.String)">
            <summary>
            string中是否包含某个值
            </summary>
            <param name="data">数据包</param>
            <param name="value">值</param>
            <returns></returns>
        </member>
        <member name="F:YellowJHelpFw.YJHelpKafka._Help">
            <summary>
            帮助接口
            </summary>
        </member>
        <member name="M:YellowJHelpFw.YJHelpKafka.Produce(System.String,System.String,System.String)">
            <summary>
            发布者
            </summary>
            <param name="theme">主题</param>
            <param name="json">数据</param>
            <param name="BS">kafka连接地址</param>
        </member>
        <member name="M:YellowJHelpFw.YJHelpKafka.Produce(System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            发布者-随机分区
            </summary>
            <param name="theme">主题</param>
            <param name="json">数据</param>
            <param name="BS">kafka连接地址</param>
            <param name="start">分区起始值：0</param>
            <param name="end">分区结束值：0</param>
        </member>
        <member name="M:YellowJHelpFw.YJHelpKafka.ProduceAdmin(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            发布者（带账号密码）
            </summary>
            <param name="theme">主题</param>
            <param name="json">数据</param>
            <param name="BS">kafka连接地址</param>
            <param name="name">账号</param>
            <param name="pwd">密码</param>
            <param name="skey"></param>
        </member>
        <member name="M:YellowJHelpFw.YJHelpKafka.ProduceAdminPartition(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.String)">
            <summary>
            发布者-随机分区（带账号密码）
            </summary>
            <param name="theme">主题</param>
            <param name="json">数据</param>
            <param name="BS">kafka连接地址</param>
            <param name="name">账号</param>
            <param name="pwd">密码</param>
            <param name="skey"></param>
            <param name="start">分区起始值：0</param>
            <param name="end">分区结束值：0</param>
        </member>
        <member name="M:YellowJHelpFw.YJHelpRedis.RedisCli(System.String)">
            <summary>
            redis 配置中心
            </summary>
            <returns></returns>
        </member>
        <member name="M:YellowJHelpFw.YJHelpRedis.Get``1(System.String)">
            <summary>
            获取单个实体
            </summary>
            <typeparam name="T">实体</typeparam>
            <param name="key">健</param>
            <returns></returns>
        </member>
        <member name="M:YellowJHelpFw.YJHelpRedis.GetList``1(System.String)">
            <summary>
            获取列表List
            </summary>
            <typeparam name="T">实体</typeparam>
            <param name="key">健</param>
            <returns></returns>
        </member>
        <member name="M:YellowJHelpFw.YJHelpRedis.Set``1(System.String,``0,System.Int32)">
            <summary>
            写入单项实体
            </summary>
            <typeparam name="T">实体</typeparam>
            <param name="key">健</param>
            <param name="enety">值</param>
            <param name="expire">过期时间，秒。小于0时采用默认缓存时间NewLife.Caching.Cache.Expire</param>
        </member>
        <member name="M:YellowJHelpFw.YJHelpRedis.Add``1(System.String,``0,System.Int32)">
            <summary>
            添加，已存在时不更新
            </summary>
            <typeparam name="T">实体</typeparam>
            <param name="key">健</param>
            <param name="enety">值</param>
            <param name="expire">过期时间，秒。小于0时采用默认缓存时间NewLife.Caching.Cache.Expire</param>
        </member>
        <member name="M:YellowJHelpFw.YJHelpRedis.ListSetW``1(System.String,System.Collections.Generic.List{``0})">
            <summary>
            写入集合：尾部增加
            </summary>
            <typeparam name="T">实体</typeparam>
            <param name="key">健</param>
            <param name="enety">值</param>
        </member>
        <member name="M:YellowJHelpFw.YJHelpRedis.ListSetT``1(System.String,System.Collections.Generic.List{``0})">
            <summary>
            写入集合：头部增加
            </summary>
            <typeparam name="T">实体</typeparam>
            <param name="key">健</param>
            <param name="enety">值</param>
        </member>
        <member name="M:YellowJHelpFw.YJHelpRedis.Clear">
            <summary>
            清空所有缓存项
            </summary>
        </member>
        <member name="M:YellowJHelpFw.YJHelpRedis.Remove(System.String[])">
            <summary>
            清空所有缓存项
            </summary>
        </member>
        <member name="M:YellowJHelpFw.YJHelpRedis.GetExpire(System.String)">
            <summary>
            获取缓存项有效期
            </summary>
        </member>
        <member name="M:YellowJHelpFw.YJHelpRedis.ContainsKey(System.String)">
            <summary>
            是否存在
            </summary>
        </member>
        <member name="M:YellowJHelpFw.YJHelpRedis.Count">
            <summary>
            缓存个数
            </summary>
        </member>
        <member name="M:YellowJHelpFw.YJHelpRedis.SCARD(System.String)">
            <summary>
            返回集合个数
            </summary>
        </member>
        <member name="F:YellowJHelpFw.YJHelpSql.sqlconntion">
            <summary>
            sqlserver链接参数
            </summary>
        </member>
        <member name="M:YellowJHelpFw.YJHelpSql.Db">
            <summary>
            数据库操作
            </summary>
            <returns></returns>
        </member>
        <member name="M:YellowJHelpFw.YJHelpSql.SqlApiLog(YellowJHelpFw.Entry.LogInfo)">
            <summary>
            数据库日志记录
            </summary>
        </member>
        <member name="M:YellowJHelpFw.YJHelpSql.SYDb(System.String)">
            <summary>
            私有数据库
            </summary>
            <returns></returns>
        </member>
        <member name="M:YellowJHelpFw.YJHelpT`1.SpliteSourceBySize(System.Collections.Generic.List{`0},System.Int32)">
            <summary>
            将集合按大小分
            </summary>
            <param name="source">数据集</param>
            <param name="pageSiez">每一组大小</param>
        </member>
        <member name="M:YellowJHelpFw.YJHelpT`1.SpliteSourceByCount(System.Collections.Generic.List{`0},System.Int32)">
            <summary> 
            将集合安按组数分
            </summary> 
            <param name="source">数据集</param> 
            <param name="count">组数</param> 
        </member>
        <member name="M:YellowJHelpFw.YJHelpT`1.DistinctList(System.Collections.Generic.List{`0})">
            <summary>
            集合去重(哈西,只针对数值类型)
            </summary>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:YellowJHelpFw.YJHelpT`1.Merge(System.Collections.Generic.List{`0},System.Collections.Generic.List{`0})">
            <summary>
            合并两个集合的函数-不允许有重复项
            </summary>
            <param name="list1">第一个集合</param>
            <param name="list2">第二个集合</param>
            <returns>返回第union的合并结果</returns>
        </member>
        <member name="M:YellowJHelpFw.YJHelpT`1.MergeC(System.Collections.Generic.List{`0},System.Collections.Generic.List{`0})">
            <summary>
            合并两个集合的函数-允许出现重复项
            </summary>
            <param name="list1">第一个集合</param>
            <param name="list2">第二个集合</param>
            <returns>返回第union的合并结果</returns>
        </member>
        <member name="M:YellowJHelpFw.YJHelpT`1.DiffsetT(System.Collections.Generic.List{`0},System.Collections.Generic.List{`0})">
            <summary>
            获取差集（集合）
            </summary>
            <param name="left">左边的数据</param>
            <param name="right">右边的数据</param>
            <returns></returns>
        </member>
        <member name="M:YellowJHelpFw.YJHelpWebApi.HttpGet(System.String)">
            <summary>
            调用接口方法get
            </summary>
            <param name="url">地址</param>
            <returns></returns>
        </member>
        <member name="M:YellowJHelpFw.YJHelpWebApi.HttPost(System.String,System.String)">
            <summary>
            调用接口方法Post
            </summary>
            <param name="url">地址</param>
            <param name="Jsoncontent">参数</param>
            <returns></returns>
        </member>
        <member name="M:YellowJHelpFw.YJHelpWebApi.HttHeadersPost(System.String,System.String,System.Net.WebHeaderCollection)">
            <summary>
            调用接口方法Post（新增head头）
            </summary>
            <param name="url">地址</param>
            <param name="Jsoncontent">参数</param>
            <param name="webHeaderCollection">head</param>
            <returns></returns>
        </member>
        <member name="T:YellowJHelpFw.YJDiInject">
            <summary>
            自动注入
            </summary>
        </member>
        <member name="M:YellowJHelpFw.YJDiInject.YJAutofacDiInJect(Microsoft.Extensions.Hosting.IHostBuilder)">
            <summary>
            自动注入所有的程序集（Autofac继承默认生命周期）
            </summary>
            <param name="host"></param>
            <returns></returns>
        </member>
        <member name="M:YellowJHelpFw.YJDiInject.YJDiInJect(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            自动注入所有的程序集(可控制生命周期)
            </summary>
            <param name="serviceCollection"></param>
            <returns></returns>
        </member>
        <member name="T:YellowJHelpFw.AutofacModuleRegister">
            <summary>
            Autofac自动依赖注入配置
            </summary>
        </member>
        <member name="M:YellowJHelpFw.AutofacModuleRegister.GetAssemblyByName(System.String)">
            <summary>
            根据程序集名称获取程序集
            </summary>E
            <param name="AssemblyName">程序集名称</param>
            <returns></returns>
        </member>
    </members>
</doc>

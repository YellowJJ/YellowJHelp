<?xml version="1.0"?>
<doc>
    <assembly>
        <name>YellowJHelp</name>
    </assembly>
    <members>
        <member name="T:YellowJHelp.Entry.LogInfo">
            <summary>
            日志
            </summary>
        </member>
        <member name="P:YellowJHelp.Entry.LogInfo.Number">
            <summary>
            编码(日志记录自动生成记录编码-不用传值)
            </summary>
        </member>
        <member name="P:YellowJHelp.Entry.LogInfo.Date">
            <summary>
            创建时间（日志记录自动生成当前日期-不用传值）
            </summary>
        </member>
        <member name="P:YellowJHelp.Entry.LogInfo.State">
            <summary>
            状态级
            </summary>
        </member>
        <member name="P:YellowJHelp.Entry.LogInfo.ElapsedTime">
            <summary>
            耗时
            </summary>
        </member>
        <member name="P:YellowJHelp.Entry.LogInfo.Source">
            <summary>
            来源
            </summary>
        </member>
        <member name="P:YellowJHelp.Entry.LogInfo.SourceCode">
            <summary>
            来源编码
            </summary>
        </member>
        <member name="P:YellowJHelp.Entry.LogInfo.SourceName">
            <summary>
            来源名称
            </summary>
        </member>
        <member name="P:YellowJHelp.Entry.LogInfo.Acceptor">
            <summary>
            接收值
            </summary>
        </member>
        <member name="P:YellowJHelp.Entry.LogInfo.Returbed">
            <summary>
            返回值
            </summary>
        </member>
        <member name="T:YellowJHelp.YJHelp">
            <summary>
            通用帮助方法
            </summary>
        </member>
        <member name="F:YellowJHelp.YJHelp.message">
            <summary>
            消息注明
            </summary>
        </member>
        <member name="M:YellowJHelp.YJHelp.MD5Encrypt(System.String,System.Boolean)">
            <summary>
            32位MD5加密
            </summary>
            <param name="strText">要加密字符串</param>
            <param name="IsLower">是否以小写方式返回</param>
            <returns></returns>
        </member>
        <member name="T:YellowJHelp.YJHelp.Cache">
            <summary>
            缓存类
            </summary>
        </member>
        <member name="M:YellowJHelp.YJHelp.Cache.Add(System.String,System.Object)">
            <summary>
            添加缓存
            </summary>
        </member>
        <member name="M:YellowJHelp.YJHelp.Cache.Get``1(System.String)">
            <summary>
            获取缓存
            </summary>
        </member>
        <member name="M:YellowJHelp.YJHelp.Cache.Exsits(System.String)">
            <summary>
            判断缓存是否存在
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:YellowJHelp.YJHelp.Cache.Clear">
            <summary>
            删除缓存
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:YellowJHelp.YJHelp.YellowJLog(System.String,System.String)">
            <summary>
            日志
            </summary>
            <param name="text">消息</param>
            <param name="address">相对文件地址</param>
        </member>
        <member name="M:YellowJHelp.YJHelp.MidStrEx(System.String,System.String,System.String)">
            <summary>
            字段截取
            </summary>
            <param name="sourse">值</param>
            <param name="startstr">前字符</param>
            <param name="endstr">后字符</param>
            <returns></returns>
        </member>
        <member name="T:YellowJHelp.YJHelpKafka">
            <summary>
            Kafka链接通用方法
            </summary>
        </member>
        <member name="M:YellowJHelp.YJHelpKafka.Produce(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            发布者（带账号密码）
            </summary>
            <param name="theme">主题</param>
            <param name="json">数据</param>
            <param name="BS">kafka连接地址</param>
        </member>
        <member name="T:YellowJHelp.YJHelpSql">
            <summary>
            数据库通用方法（测试）
            </summary>
        </member>
        <member name="F:YellowJHelp.YJHelpSql.sqlconntion">
            <summary>
            sqlserver链接参数
            </summary>
        </member>
        <member name="M:YellowJHelp.YJHelpSql.Query">
            <summary>
            数据库操作
            </summary>
            <returns></returns>
        </member>
        <member name="M:YellowJHelp.YJHelpSql.SqlApiLog(YellowJHelp.Entry.LogInfo)">
            <summary>
            数据库日志记录
            </summary>
        </member>
        <member name="M:YellowJHelp.YJHelpSql.SYQuery">
            <summary>
            私有数据库
            </summary>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "T:YellowJHelp.YJHelpT`1" -->
        <member name="M:YellowJHelp.YJHelpT`1.SpliteSourceBySize(System.Collections.Generic.List{`0},System.Int32)">
            <summary>
            将集合按大小分
            </summary>
            <param name="source">数据集</param>
            <param name="pageSiez">每一组大小</param>
        </member>
        <member name="M:YellowJHelp.YJHelpT`1.SpliteSourceByCount(System.Collections.Generic.List{`0},System.Int32)">
            <summary> 
            将集合安按组数分
            </summary> 
            <param name="source">数据集</param> 
            <param name="count">组数</param> 
        </member>
        <member name="M:YellowJHelp.YJHelpT`1.DistinctList(System.Collections.Generic.List{`0})">
            <summary>
            集合去重(哈西,只针对数值类型)
            </summary>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:YellowJHelp.YJHelpT`1.Merge(System.Collections.Generic.List{`0},System.Collections.Generic.List{`0})">
            <summary>
            合并两个集合的函数-不允许有重复项
            </summary>
            <param name="list1">第一个集合</param>
            <param name="list2">第二个集合</param>
            <returns>返回第union的合并结果</returns>
        </member>
        <member name="M:YellowJHelp.YJHelpT`1.MergeC(System.Collections.Generic.List{`0},System.Collections.Generic.List{`0})">
            <summary>
            合并两个集合的函数-允许出现重复项
            </summary>
            <param name="list1">第一个集合</param>
            <param name="list2">第二个集合</param>
            <returns>返回第union的合并结果</returns>
        </member>
        <member name="M:YellowJHelp.YJHelpT`1.DiffsetT(System.Collections.Generic.List{`0},System.Collections.Generic.List{`0})">
            <summary>
            获取差集（集合）
            </summary>
            <param name="left">左边的数据</param>
            <param name="right">右边的数据</param>
            <returns></returns>
        </member>
        <member name="T:YellowJHelp.YJHelpWebApi">
            <summary>
            接口调用方法
            </summary>
        </member>
        <member name="M:YellowJHelp.YJHelpWebApi.HttpGet(System.String)">
            <summary>
            调用接口方法get
            </summary>
            <param name="url">地址</param>
            <returns></returns>
        </member>
        <member name="M:YellowJHelp.YJHelpWebApi.HttPost(System.String,System.String)">
            <summary>
            调用接口方法Post
            </summary>
            <param name="url">地址</param>
            <param name="Jsoncontent">参数</param>
            <returns></returns>
        </member>
        <member name="M:YellowJHelp.YJHelpWebApi.HttHeadersPost(System.String,System.String,System.Net.WebHeaderCollection)">
            <summary>
            调用接口方法Post（新增head头）
            </summary>
            <param name="url">地址</param>
            <param name="Jsoncontent">参数</param>
            <param name="webHeaderCollection">head</param>
            <returns></returns>
        </member>
    </members>
</doc>
